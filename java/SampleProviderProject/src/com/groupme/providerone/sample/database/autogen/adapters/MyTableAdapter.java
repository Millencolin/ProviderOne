/*
 * This file has been auto-generated by ProviderOne
 *
 * Copyright (C) 2011 GroupMe, Inc.
 */
package com.groupme.providerone.sample.database.autogen.adapters;

import android.content.Context;
import android.database.Cursor;
import android.support.v4.content.CursorLoader;
import android.support.v4.widget.CursorAdapter;
import android.view.View;
import android.view.ViewGroup;

import com.groupme.providerone.sample.database.objects.MyTable;
import com.groupme.providerone.sample.database.tables.MyTableInfo;

public abstract class MyTableAdapter extends CursorAdapter {

    public static CursorLoader createCursorLoader(Context ctx, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
        if (projection == null)
            projection = MyTableInfo.ALL_COLUMNS;
        return new CursorLoader(ctx, MyTableInfo.CONTENT_URI, projection, selection, selectionArgs, sortOrder);
    }

    public static CursorLoader createCursorLoader(Context ctx, MyTableInfo.ColumnHelper columnHelper, String selection, String[] selectionArgs, String sortOrder) {
        return new CursorLoader(ctx, MyTableInfo.CONTENT_URI, columnHelper == null ? MyTableInfo.ALL_COLUMNS : columnHelper.projection, selection, selectionArgs, sortOrder);
    }

    protected MyTableInfo.ColumnHelper mColumnHelper = null;

    public MyTableAdapter(Context context, String[] projection) {
        super(context, null, false);
        if (projection == null)
            projection = MyTableInfo.ALL_COLUMNS;
        mColumnHelper = new MyTableInfo.ColumnHelper(projection);
    }

    public MyTableAdapter(Context context, MyTableInfo.ColumnHelper columnHelper) {
        super(context, null, false);
        if (columnHelper == null)
            columnHelper = new MyTableInfo.ColumnHelper(MyTableInfo.ALL_COLUMNS);
        mColumnHelper = columnHelper;
    }

    public MyTableInfo.ColumnHelper getColumnHelper() {
        return mColumnHelper;
    }

    public String[] getProjection() {
        return mColumnHelper.projection;
    }
    
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (!mDataValid) {
            throw new IllegalStateException("this should only be called when the cursor is valid");
        }
        if (!mCursor.moveToPosition(position)) {
            throw new IllegalStateException("couldn't move cursor to position " + position);
        }
        View v;
        MyTable myTable = MyTable.fromCursor(mCursor, mColumnHelper);
        if (convertView == null) {
            v = newView(mContext, myTable, parent);
        } else {
            v = convertView;
        }
        bindView(v, mContext, myTable);
        return v;
    }
    
    @Override
    public void bindView(View view, Context ctx, Cursor cursor) {
        //empty
    }

    @Override
    public View newView(Context ctx, Cursor cursor, ViewGroup parent) {
        //empty
        return null;
    }

    abstract public View newView(Context ctx, MyTable myTable, ViewGroup parent);
    abstract public void bindView(View view, Context ctx, MyTable myTable);

}
